#!@GUILE@ \
--no-auto-compile -e main -s
!#

;; Work Planner
;; Copyright (C) 2022 James Crake-Merani
;;;
;;; This program is free software: you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation, either version 3 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program.  If not, see <https://www.gnu.org/licenses/>.

;;FIXME: Assumes that this dir already exists.
(define items-dir "/home/jamescrake-merani/.local/share/work-planner/items.json")
(use-modules (work-planner command-line)
             (work-planner date-json)
             (ice-9 textual-ports)
             (ice-9 getopt-long)
             (srfi srfi-1)
             )

;; FIXME: There is no error handling here.
(define (main args) ;;TEMPORARY - right now we just get the summary screen.
  (let* ((option-spec '((complete (value #t)
                                 (single-char #\c))))
         (options (getopt-long args option-spec)))
    (let ((to-complete (option-ref options 'complete #f)))
      (let* ((items-port (open items-dir O_RDONLY))
             (items-json (get-string-all items-port))
             (items (json-string->work-items items-json)))
        (if (not (or to-complete))
            (display (summary-screen items)) ;;TODO: Unfinished. Result needs to be saved.
            (cond (to-complete) (work-item-complete
                                 (find (lambda (i) (= (assoc-ref i "id") to-complete)) items))))
        (close items-port)))))
